// === main.js (–§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ) ===

let story;
let storyContainer;
let choicesContainer;

const STORAGE_KEY = "tarolog_save";
const imageCache = new Set();
const preloadedImages = new Set();

const ALL_IMAGES = [
  "images/business_trip.png",
  "images/commute.png",
  "images/conversation_attempt.png",
  "images/divorce.png",
  "images/hanging_out.png",
  "images/home.png",
  "images/husband_reveals.png",
  "images/morning.png",
  "images/morning1.png",
  "images/take_break_from_work.png",
  "images/tarot_session.png",
  "images/tea_with_friends.png",
  "images/work_until_lunch.png"
];

document.addEventListener("DOMContentLoaded", () => {
  storyContainer = document.getElementById("storyContainer");
  choicesContainer = document.getElementById("choicesContainer");

  try {
    console.log("üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é...");
    story = new inkjs.Story(storyContent);
    console.log("‚úÖ –ò—Å—Ç–æ—Ä–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞:", story);

    // üõ† –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if (!loadStory()) {
      console.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ. –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ.");
      restartStory(); // –ó–∞–ø—É—Å–∫–∞–µ–º –∫–≤–µ—Å—Ç –∑–∞–Ω–æ–≤–æ
    }

    animatedContinueStory();
    setTimeout(preloadAllImages, 2000);
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏:", error);
    alert("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.");
  }
});

function animatedContinueStory() {
  choicesContainer.innerHTML = "";
  storyContainer.innerHTML = "";

  try {
    console.log("üìå story.canContinue:", story.canContinue);
    
    // üî• –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏—è –ø–æ—á–µ–º—É-—Ç–æ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å—Å—è ‚Äî –∑–∞–ø—É—Å–∫–∞–µ–º –∑–∞–Ω–æ–≤–æ!
    if (!story.canContinue) {
      console.warn("‚ö†Ô∏è –ò—Å—Ç–æ—Ä–∏—è –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å—Å—è! –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–Ω–æ–≤–æ.");
      restartStory();
      return;
    }

    while (story.canContinue) {
      const paragraphText = story.Continue();
      console.log("üìù –î–æ–±–∞–≤–ª–µ–Ω —Ç–µ–∫—Å—Ç:", paragraphText);

      saveStory();

      const p = document.createElement("p");
      p.textContent = paragraphText;
      storyContainer.appendChild(p);

      if (story.currentTags) {
        story.currentTags.forEach(tag => {
          if (tag.startsWith("IMAGE:")) {
            const imagePath = tag.replace("IMAGE:", "").trim();
            displayImage(imagePath);
          }
        });
      }
    }

    console.log("üìå –¢–µ–∫—É—â–∏–π –≤—ã–±–æ—Ä:", story.currentChoices);

    if (story.currentChoices.length === 0 && story.canContinue) {
      console.log("‚ö†Ô∏è –ê–≤—Ç–æ-–ø–µ—Ä–µ—Ö–æ–¥ ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º!");
      animatedContinueStory();
      return;
    }

    if (story.currentChoices.length > 0) {
      story.currentChoices.forEach((choice, idx) => {
        console.log(`üîò –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É: ${choice.text}`);
        const btn = document.createElement("button");
        btn.className = "uk-button uk-button-primary uk-margin-small-right";
        btn.textContent = choice.text;
        btn.addEventListener("click", () => {
          story.ChooseChoiceIndex(idx);
          animatedContinueStory();
          saveStory();
        });

        choicesContainer.appendChild(btn);
      });
    } else if (!story.canContinue) {
      console.log("üîò –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å¬ª");
      const continueBtn = document.createElement("button");
      continueBtn.className = "uk-button uk-button-primary uk-margin-small-right";
      continueBtn.textContent = "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å";
      continueBtn.addEventListener("click", () => {
        animatedContinueStory();
      });

      choicesContainer.appendChild(continueBtn);
    }

    storyContainer.scrollIntoView({ behavior: "smooth", block: "start" });

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏—Å—Ç–æ—Ä–∏–∏:", error);
    alert("‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫.");
    localStorage.removeItem(STORAGE_KEY);
    location.reload();
  }
}

function preloadAllImages() {
  console.log("üîÑ –ü–æ–¥–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...");
  ALL_IMAGES.forEach(imagePath => {
    if (!preloadedImages.has(imagePath)) {
      const img = new Image();
      img.src = imagePath;
      preloadedImages.add(imagePath);
      console.log("‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ:", imagePath);
    }
  });
}

function displayImage(imagePath) {
  if (!imageCache.has(imagePath)) {
    console.log(`üñº –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É: ${imagePath}`);
    const img = document.createElement("img");
    img.src = imagePath;
    img.className = "uk-margin uk-responsive-img";
    storyContainer.appendChild(img);
    imageCache.add(imagePath);
  }
}

function saveStory() {
  try {
    const savedState = story.state.toJson();
    localStorage.setItem(STORAGE_KEY, savedState);
    console.log("üíæ –ò—Å—Ç–æ—Ä–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.");
  } catch (error) {
    console.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:", error);
  }
}

function loadStory() {
  try {
    const savedState = localStorage.getItem(STORAGE_KEY);
    if (savedState && savedState.length > 10) {
      story.state.LoadJson(savedState);
      console.log("‚úÖ –ò—Å—Ç–æ—Ä–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞.");
      return true;
    } else {
      console.warn("‚ö†Ô∏è –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–æ.");
      return false;
    }
  } catch (error) {
    console.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:", error);
    return false;
  }
}

// üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏—Å—Ç–æ—Ä–∏–∏, –µ—Å–ª–∏ –≤—Å—ë —Å–ª–æ–º–∞–ª–æ—Å—å
function restartStory() {
  console.warn("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é...");
  localStorage.removeItem(STORAGE_KEY);
  story = new inkjs.Story(storyContent);
  animatedContinueStory();
}

let lastImage = null; // üî• –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

function animatedContinueStory() {
  choicesContainer.innerHTML = "";
  storyContainer.innerHTML = "";

  try {
    console.log("üìå story.canContinue:", story.canContinue);
    
    if (!story.canContinue) {
      console.warn("‚ö†Ô∏è –ò—Å—Ç–æ—Ä–∏—è –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å—Å—è! –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–Ω–æ–≤–æ.");
      restartStory();
      return;
    }

    let newText = [];

    while (story.canContinue) {
      const paragraphText = story.Continue();
      console.log("üìù –î–æ–±–∞–≤–ª–µ–Ω —Ç–µ–∫—Å—Ç:", paragraphText);
      saveStory();

      newText.push(paragraphText);

      // üî• –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–≥–∏
      if (story.currentTags) {
        story.currentTags.forEach(tag => {
          if (tag.startsWith("IMAGE:")) {
            lastImage = tag.replace("IMAGE:", "").trim();
            console.log("üñº –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:", lastImage);
          }
        });
      }
    }

    // üî• –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ —Ç–µ–∫—Å—Ç–æ–º
    if (lastImage) {
      displayImage(lastImage);
    }

    // üî• –í—ã–≤–æ–¥–∏–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç –ü–û–°–õ–ï –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    newText.forEach(text => {
      const p = document.createElement("p");
      p.textContent = text;
      storyContainer.appendChild(p);
    });

    console.log("üìå –¢–µ–∫—É—â–∏–π –≤—ã–±–æ—Ä:", story.currentChoices);

    if (story.currentChoices.length === 0 && story.canContinue) {
      console.log("‚ö†Ô∏è –ê–≤—Ç–æ-–ø–µ—Ä–µ—Ö–æ–¥ ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º!");
      animatedContinueStory();
      return;
    }

    if (story.currentChoices.length > 0) {
      story.currentChoices.forEach((choice, idx) => {
        console.log(`üîò –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É: ${choice.text}`);
        const btn = document.createElement("button");
        btn.className = "uk-button uk-button-primary uk-margin-small-right";
        btn.textContent = choice.text;
        btn.addEventListener("click", () => {
          story.ChooseChoiceIndex(idx);
          animatedContinueStory();
          saveStory();
        });

        choicesContainer.appendChild(btn);
      });
    } else if (!story.canContinue) {
      console.log("üîò –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å¬ª");
      const continueBtn = document.createElement("button");
      continueBtn.className = "uk-button uk-button-primary uk-margin-small-right";
      continueBtn.textContent = "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å";
      continueBtn.addEventListener("click", () => {
        animatedContinueStory();
      });

      choicesContainer.appendChild(continueBtn);
    }

    storyContainer.scrollIntoView({ behavior: "smooth", block: "start" });

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏—Å—Ç–æ—Ä–∏–∏:", error);
    alert("‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫.");
    localStorage.removeItem(STORAGE_KEY);
    location.reload();
  }
}

// üî• –§–∏–∫—Å: –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤—Å—Ç–∞–≤–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ü–ï–†–ï–î —Ç–µ–∫—Å—Ç–æ–º
function displayImage(imagePath) {
  console.log(`üñº –í—Å—Ç–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${imagePath}`);

  let existingImg = document.getElementById("questImage");

  if (!existingImg) {
    const img = document.createElement("img");
    img.src = imagePath;
    img.id = "questImage";
    img.className = "uk-margin uk-responsive-img";
    img.onload = () => console.log("‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ:", imagePath);
    img.onerror = () => console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", imagePath);
    
    // –í—Å—Ç–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –≤ –Ω–∞—á–∞–ª–æ storyContainer
    storyContainer.prepend(img);
  } else {
    existingImg.src = imagePath;
    console.log("‚ôªÔ∏è –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É.");
  }
}
