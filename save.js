// === save.js ===
// –£–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∏ –∑–∞–≥—Ä—É–∑–∫–æ–π —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏

const STORAGE_KEY = "tarolog_save"; // –ö–ª—é—á –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö

function saveStory() {
  try {
    const savedState = story.state.toJson();
    localStorage.setItem(STORAGE_KEY, savedState);
    console.log("üíæ –ò—Å—Ç–æ—Ä–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.");
  } catch (error) {
    console.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:", error);
  }
}

function loadStory() {
  try {
    const savedState = localStorage.getItem(STORAGE_KEY);
    if (savedState && savedState.length > 10) {
      story.state.LoadJson(savedState);
      console.log("‚úÖ –ò—Å—Ç–æ—Ä–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞.");
      return true;
    } else {
      console.warn("‚ö†Ô∏è –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–æ.");
      return false;
    }
  } catch (error) {
    console.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:", error);
    return false;
  }
}

function restartStory() {
  console.warn("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é...");
  localStorage.removeItem(STORAGE_KEY);
  story = new inkjs.Story(storyContent);
  continueStory();
}
